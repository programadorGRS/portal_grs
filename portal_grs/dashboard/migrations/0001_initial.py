# Generated by Django 5.1.6 on 2025-03-14 06:27

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('nome', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_staff', models.BooleanField(default=False)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('ultima_sessao', models.DateTimeField(blank=True, null=True)),
                ('tipo_usuario', models.CharField(choices=[('admin', 'Administrador'), ('normal', 'Usuário Normal')], default='normal', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'db_table': 'usuarios',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('codigo', models.BigIntegerField(primary_key=True, serialize=False, verbose_name='Código')),
                ('nome_abreviado', models.CharField(max_length=60, verbose_name='Nome Abreviado')),
                ('razao_social_inicial', models.CharField(max_length=200, verbose_name='Razão Social Inicial')),
                ('razao_social', models.CharField(max_length=200, verbose_name='Razão Social')),
                ('endereco', models.CharField(max_length=110, verbose_name='Endereço')),
                ('numero_endereco', models.CharField(max_length=20, verbose_name='Número')),
                ('complemento_endereco', models.CharField(blank=True, max_length=300, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(max_length=80, verbose_name='Bairro')),
                ('cidade', models.CharField(max_length=50, verbose_name='Cidade')),
                ('cep', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='CEP deve estar no formato XXXXX-XXX', regex='^\\d{5}-\\d{3}$')], verbose_name='CEP')),
                ('uf', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, verbose_name='UF')),
                ('cnpj', models.CharField(db_index=True, max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='CNPJ deve estar no formato XX.XXX.XXX/XXXX-XX', regex='^\\d{2}\\.\\d{3}\\.\\d{3}/\\d{4}-\\d{2}$')], verbose_name='CNPJ')),
                ('inscricao_estadual', models.CharField(blank=True, max_length=20, null=True, verbose_name='Inscrição Estadual')),
                ('inscricao_municipal', models.CharField(blank=True, max_length=20, null=True, verbose_name='Inscrição Municipal')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('codigo_cliente_integracao', models.CharField(blank=True, max_length=20, null=True, verbose_name='Código Cliente Integração')),
                ('codigo_cliente_int', models.CharField(blank=True, max_length=30, null=True, verbose_name='Cód. Cliente (INT.)')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'db_table': 'empresas',
                'ordering': ['nome_abreviado'],
                'indexes': [models.Index(fields=['nome_abreviado'], name='empresas_nome_ab_c2b5a7_idx'), models.Index(fields=['cnpj'], name='empresas_cnpj_009d7f_idx'), models.Index(fields=['ativo'], name='empresas_ativo_c55b16_idx')],
            },
        ),
        migrations.CreateModel(
            name='AcessoEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissao_leitura', models.BooleanField(default=True)),
                ('permissao_escrita', models.BooleanField(default=False)),
                ('permissao_exclusao', models.BooleanField(default=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.empresa')),
            ],
            options={
                'verbose_name': 'Acesso à Empresa',
                'verbose_name_plural': 'Acessos às Empresas',
                'db_table': 'acesso_empresas',
            },
        ),
        migrations.AddField(
            model_name='usuario',
            name='acesso_empresas',
            field=models.ManyToManyField(related_name='usuarios_com_acesso', through='dashboard.AcessoEmpresa', to='dashboard.empresa'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='empresa_principal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios_principal', to='dashboard.empresa'),
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('codigo', models.BigIntegerField(primary_key=True, serialize=False, verbose_name='Código')),
                ('codigo_empresa', models.BigIntegerField(verbose_name='Código Empresa')),
                ('nome_empresa', models.CharField(max_length=200, verbose_name='Nome Empresa')),
                ('nome', models.CharField(max_length=120, verbose_name='Nome')),
                ('codigo_unidade', models.CharField(blank=True, max_length=20, null=True, verbose_name='Código Unidade')),
                ('nome_unidade', models.CharField(blank=True, max_length=130, null=True, verbose_name='Nome Unidade')),
                ('codigo_setor', models.CharField(blank=True, max_length=12, null=True, verbose_name='Código Setor')),
                ('nome_setor', models.CharField(blank=True, max_length=130, null=True, verbose_name='Nome Setor')),
                ('codigo_cargo', models.CharField(blank=True, max_length=10, null=True, verbose_name='Código Cargo')),
                ('nome_cargo', models.CharField(blank=True, max_length=130, null=True, verbose_name='Nome Cargo')),
                ('cbo_cargo', models.CharField(blank=True, max_length=10, null=True, verbose_name='CBO Cargo')),
                ('ccusto', models.CharField(blank=True, max_length=50, null=True, verbose_name='Centro de Custo')),
                ('nome_centro_custo', models.CharField(blank=True, max_length=130, null=True, verbose_name='Nome Centro Custo')),
                ('matricula_funcionario', models.CharField(blank=True, max_length=30, null=True, verbose_name='Matrícula Funcionário')),
                ('cpf', models.CharField(blank=True, max_length=19, null=True, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=19, null=True, verbose_name='RG')),
                ('uf_rg', models.CharField(blank=True, max_length=10, null=True, verbose_name='UF RG')),
                ('orgao_emissor_rg', models.CharField(blank=True, max_length=20, null=True, verbose_name='Órgão Emissor RG')),
                ('situacao', models.CharField(blank=True, max_length=12, null=True, verbose_name='Situação')),
                ('sexo', models.IntegerField(blank=True, choices=[(1, 'Masculino'), (2, 'Feminino')], null=True, verbose_name='Sexo')),
                ('pis', models.CharField(blank=True, max_length=20, null=True, verbose_name='PIS')),
                ('ctps', models.CharField(blank=True, max_length=30, null=True, verbose_name='CTPS')),
                ('serie_ctps', models.CharField(blank=True, max_length=25, null=True, verbose_name='Série CTPS')),
                ('estado_civil', models.IntegerField(blank=True, choices=[(1, 'Solteiro(a)'), (2, 'Casado(a)'), (3, 'Separado(a)'), (4, 'Desquitado(a)'), (5, 'Viuvo(a)'), (6, 'Outros'), (7, 'Divorciado(a)')], null=True, verbose_name='Estado Civil')),
                ('tipo_contratacao', models.IntegerField(blank=True, null=True, verbose_name='Tipo Contratação')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('data_admissao', models.DateField(blank=True, null=True, verbose_name='Data de Admissão')),
                ('data_demissao', models.DateField(blank=True, null=True, verbose_name='Data de Demissão')),
                ('endereco', models.CharField(blank=True, max_length=110, null=True, verbose_name='Endereço')),
                ('numero_endereco', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número')),
                ('bairro', models.CharField(blank=True, max_length=80, null=True, verbose_name='Bairro')),
                ('cidade', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cidade')),
                ('uf', models.CharField(blank=True, max_length=20, null=True, verbose_name='UF')),
                ('cep', models.CharField(blank=True, max_length=10, null=True, verbose_name='CEP')),
                ('telefone_residencial', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone Residencial')),
                ('telefone_celular', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone Celular')),
                ('email', models.CharField(blank=True, max_length=400, null=True, verbose_name='Email')),
                ('deficiente', models.BooleanField(default=False, verbose_name='Deficiente')),
                ('deficiencia', models.CharField(blank=True, max_length=861, null=True, verbose_name='Deficiência')),
                ('nm_mae_funcionario', models.CharField(blank=True, max_length=120, null=True, verbose_name='Nome da Mãe')),
                ('data_ultima_alteracao', models.DateField(blank=True, null=True, verbose_name='Data Última Alteração')),
                ('matricula_rh', models.CharField(blank=True, max_length=30, null=True, verbose_name='Matrícula RH')),
                ('cor', models.IntegerField(blank=True, null=True, verbose_name='Cor')),
                ('escolaridade', models.IntegerField(blank=True, null=True, verbose_name='Escolaridade')),
                ('naturalidade', models.CharField(blank=True, max_length=50, null=True, verbose_name='Naturalidade')),
                ('ramal', models.CharField(blank=True, max_length=10, null=True, verbose_name='Ramal')),
                ('regime_revezamento', models.IntegerField(blank=True, null=True, verbose_name='Regime Revezamento')),
                ('regime_trabalho', models.CharField(blank=True, max_length=500, null=True, verbose_name='Regime Trabalho')),
                ('tel_comercial', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone Comercial')),
                ('turno_trabalho', models.IntegerField(blank=True, null=True, verbose_name='Turno Trabalho')),
                ('rh_unidade', models.CharField(blank=True, max_length=80, null=True, verbose_name='RH Unidade')),
                ('rh_setor', models.CharField(blank=True, max_length=80, null=True, verbose_name='RH Setor')),
                ('rh_cargo', models.CharField(blank=True, max_length=80, null=True, verbose_name='RH Cargo')),
                ('rh_centro_custo_unidade', models.CharField(blank=True, max_length=80, null=True, verbose_name='RH Centro Custo Unidade')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='funcionarios', to='dashboard.empresa')),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
                'db_table': 'funcionarios',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Convocacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_empresa', models.BigIntegerField(verbose_name='Código Empresa')),
                ('nome_abreviado', models.CharField(max_length=60, verbose_name='Nome Abreviado')),
                ('unidade', models.CharField(max_length=130, verbose_name='Unidade')),
                ('cidade', models.CharField(max_length=50, verbose_name='Cidade')),
                ('estado', models.CharField(max_length=2, verbose_name='Estado')),
                ('bairro', models.CharField(max_length=80, verbose_name='Bairro')),
                ('endereco', models.CharField(max_length=110, verbose_name='Endereço')),
                ('cep', models.CharField(max_length=10, verbose_name='CEP')),
                ('cnpj_unidade', models.CharField(max_length=20, verbose_name='CNPJ Unidade')),
                ('setor', models.CharField(max_length=130, verbose_name='Setor')),
                ('cargo', models.CharField(max_length=130, verbose_name='Cargo')),
                ('codigo_funcionario', models.BigIntegerField(verbose_name='Código Funcionário')),
                ('cpf_funcionario', models.CharField(max_length=14, verbose_name='CPF Funcionário')),
                ('matricula', models.CharField(max_length=30, verbose_name='Matrícula')),
                ('data_admissao', models.DateField(verbose_name='Data de Admissão')),
                ('nome', models.CharField(max_length=120, verbose_name='Nome do Funcionário')),
                ('email_funcionario', models.CharField(blank=True, max_length=400, null=True, verbose_name='Email do Funcionário')),
                ('telefone_funcionario', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone do Funcionário')),
                ('codigo_exame', models.CharField(max_length=20, verbose_name='Código do Exame')),
                ('exame', models.CharField(max_length=200, verbose_name='Exame')),
                ('ultimo_pedido', models.DateField(blank=True, null=True, verbose_name='Data do Último Pedido')),
                ('data_resultado', models.DateField(blank=True, null=True, verbose_name='Data do Resultado')),
                ('periodicidade', models.IntegerField(verbose_name='Periodicidade (meses)')),
                ('refazer', models.DateField(blank=True, null=True, verbose_name='Data para Refazer')),
                ('status', models.CharField(default='PENDENTE', max_length=20, verbose_name='Status')),
                ('data_convocacao', models.DateField(auto_now_add=True, verbose_name='Data da Convocação')),
                ('data_agendamento', models.DateField(blank=True, null=True, verbose_name='Data de Agendamento')),
                ('hora_agendamento', models.TimeField(blank=True, null=True, verbose_name='Hora de Agendamento')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='convocacoes', to='dashboard.empresa')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='convocacoes', to='dashboard.funcionario')),
            ],
            options={
                'verbose_name': 'Convocação de Exame',
                'verbose_name_plural': 'Convocações de Exames',
                'db_table': 'convocacoes',
                'ordering': ['-data_convocacao', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Absenteismo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unidade', models.CharField(max_length=130, verbose_name='Unidade')),
                ('setor', models.CharField(max_length=130, verbose_name='Setor')),
                ('matricula_func', models.CharField(max_length=30, verbose_name='Matrícula Funcionário')),
                ('dt_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('sexo', models.IntegerField(blank=True, choices=[(1, 'Masculino'), (2, 'Feminino')], null=True, verbose_name='Sexo')),
                ('tipo_atestado', models.IntegerField(choices=[(1, 'Atestado médico'), (2, 'Licença maternidade'), (3, 'Acidente de trabalho'), (4, 'Outros afastamentos')], default=1, verbose_name='Tipo de Atestado')),
                ('dt_inicio_atestado', models.DateField(verbose_name='Data Início Atestado')),
                ('dt_fim_atestado', models.DateField(verbose_name='Data Fim Atestado')),
                ('hora_inicio_atestado', models.CharField(blank=True, max_length=5, null=True, verbose_name='Hora Início Atestado')),
                ('hora_fim_atestado', models.CharField(blank=True, max_length=5, null=True, verbose_name='Hora Fim Atestado')),
                ('dias_afastados', models.IntegerField(verbose_name='Dias Afastados')),
                ('horas_afastado', models.CharField(blank=True, max_length=5, null=True, verbose_name='Horas Afastado')),
                ('cid_principal', models.CharField(blank=True, max_length=10, null=True, verbose_name='CID Principal')),
                ('descricao_cid', models.CharField(blank=True, max_length=264, null=True, verbose_name='Descrição CID')),
                ('grupo_patologico', models.CharField(blank=True, max_length=80, null=True, verbose_name='Grupo Patológico')),
                ('tipo_licenca', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tipo de Licença')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absenteismos', to='dashboard.empresa', verbose_name='Empresa')),
                ('funcionario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='absenteismos', to='dashboard.funcionario', verbose_name='Funcionário')),
            ],
            options={
                'verbose_name': 'Absenteísmo',
                'verbose_name_plural': 'Absenteísmos',
                'db_table': 'absenteismo',
                'ordering': ['-dt_inicio_atestado', 'matricula_func'],
            },
        ),
        migrations.CreateModel(
            name='Tela',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(db_index=True, max_length=100, unique=True)),
                ('codigo', models.CharField(max_length=50, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tela',
                'verbose_name_plural': 'Telas',
                'db_table': 'telas',
                'ordering': ['nome'],
                'indexes': [models.Index(fields=['nome'], name='telas_nome_25cfa4_idx'), models.Index(fields=['codigo'], name='telas_codigo_932468_idx')],
            },
        ),
        migrations.CreateModel(
            name='AcessoTela',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissao_leitura', models.BooleanField(default=True)),
                ('permissao_escrita', models.BooleanField(default=False)),
                ('permissao_exclusao', models.BooleanField(default=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tela', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.tela')),
            ],
            options={
                'verbose_name': 'Acesso à Tela',
                'verbose_name_plural': 'Acessos às Telas',
                'db_table': 'acesso_telas',
            },
        ),
        migrations.AddField(
            model_name='usuario',
            name='acesso_telas',
            field=models.ManyToManyField(through='dashboard.AcessoTela', to='dashboard.tela'),
        ),
        migrations.AddIndex(
            model_name='acessoempresa',
            index=models.Index(fields=['usuario', 'empresa'], name='acesso_empr_usuario_bf877d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='acessoempresa',
            unique_together={('usuario', 'empresa')},
        ),
        migrations.AddIndex(
            model_name='funcionario',
            index=models.Index(fields=['codigo'], name='funcionario_codigo_18e4b3_idx'),
        ),
        migrations.AddIndex(
            model_name='funcionario',
            index=models.Index(fields=['nome'], name='funcionario_nome_9aa946_idx'),
        ),
        migrations.AddIndex(
            model_name='funcionario',
            index=models.Index(fields=['cpf'], name='funcionario_cpf_afb6a8_idx'),
        ),
        migrations.AddIndex(
            model_name='funcionario',
            index=models.Index(fields=['codigo_empresa'], name='funcionario_codigo__767e71_idx'),
        ),
        migrations.AddIndex(
            model_name='funcionario',
            index=models.Index(fields=['data_admissao'], name='funcionario_data_ad_476140_idx'),
        ),
        migrations.AddIndex(
            model_name='funcionario',
            index=models.Index(fields=['situacao'], name='funcionario_situaca_1e432b_idx'),
        ),
        migrations.AddIndex(
            model_name='convocacao',
            index=models.Index(fields=['empresa'], name='convocacoes_empresa_825f51_idx'),
        ),
        migrations.AddIndex(
            model_name='convocacao',
            index=models.Index(fields=['funcionario'], name='convocacoes_funcion_0943ff_idx'),
        ),
        migrations.AddIndex(
            model_name='convocacao',
            index=models.Index(fields=['codigo_funcionario'], name='convocacoes_codigo__45ea1c_idx'),
        ),
        migrations.AddIndex(
            model_name='convocacao',
            index=models.Index(fields=['codigo_exame'], name='convocacoes_codigo__f488b8_idx'),
        ),
        migrations.AddIndex(
            model_name='convocacao',
            index=models.Index(fields=['data_convocacao'], name='convocacoes_data_co_2eb2ea_idx'),
        ),
        migrations.AddIndex(
            model_name='convocacao',
            index=models.Index(fields=['status'], name='convocacoes_status_a67b54_idx'),
        ),
        migrations.AddIndex(
            model_name='absenteismo',
            index=models.Index(fields=['empresa'], name='absenteismo_empresa_910783_idx'),
        ),
        migrations.AddIndex(
            model_name='absenteismo',
            index=models.Index(fields=['matricula_func'], name='absenteismo_matricu_596bea_idx'),
        ),
        migrations.AddIndex(
            model_name='absenteismo',
            index=models.Index(fields=['dt_inicio_atestado', 'dt_fim_atestado'], name='absenteismo_dt_inic_d75a47_idx'),
        ),
        migrations.AddIndex(
            model_name='absenteismo',
            index=models.Index(fields=['tipo_atestado'], name='absenteismo_tipo_at_048285_idx'),
        ),
        migrations.AddIndex(
            model_name='absenteismo',
            index=models.Index(fields=['cid_principal'], name='absenteismo_cid_pri_d7be98_idx'),
        ),
        migrations.AddIndex(
            model_name='acessotela',
            index=models.Index(fields=['usuario', 'tela'], name='acesso_tela_usuario_78776b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='acessotela',
            unique_together={('usuario', 'tela')},
        ),
        migrations.AddIndex(
            model_name='usuario',
            index=models.Index(fields=['email'], name='usuarios_email_0ff7b3_idx'),
        ),
        migrations.AddIndex(
            model_name='usuario',
            index=models.Index(fields=['tipo_usuario'], name='usuarios_tipo_us_3a6d09_idx'),
        ),
        migrations.AddIndex(
            model_name='usuario',
            index=models.Index(fields=['is_active'], name='usuarios_is_acti_8ee55c_idx'),
        ),
    ]
